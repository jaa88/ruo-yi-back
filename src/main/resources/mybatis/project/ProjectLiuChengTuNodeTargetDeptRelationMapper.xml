<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.projectmanage.mapper.ProjectLiuChengTuNodeTargetDeptRelationMapper">
    
    <resultMap type="com.ruoyi.project.projectmanage.domain.ProjectLiuChengTuNodeTargetDeptRelation" id="tempMap">
    	<id     property="id"      column="id"      />
        <result property="projectBaseId"    column="project_base_id"    />
        <result property="nodeId"     column="node_id"     />
        <result property="chargeDeptId"    column="charge_dept_id"    />
        <result property="updateUserId"      column="update_user_id"      />
        <result property="updateTime"    column="update_time"    />
        <result property="dataJsonStr"    column="data_json_str"    />
        <result property="status"    column="status"    />
        <result property="projectName"    column="project_name"    />
        <result property="taskName"    column="task_name"    />
        <result property="deptName"    column="dept_name"    />
        <result property="startTime"    column="start_time"    />
        <result property="expectedEndTime"    column="expected_end_time"    />
        <result property="originFileNameListStr"    column="origin_file_name_list_str"    />
        <result property="curFilePathAndNameListStr"    column="cur_file_path_and_name_list_str"    />
    </resultMap>

    <insert id="insertProjectLiuChengTuNodeTargetDeptRelationList" parameterType="list">
        insert into project_liu_cheng_tu_node_target_dept_relation (
        project_base_id, node_id, charge_dept_id,
        update_user_id, update_time)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.projectBaseId},#{item.nodeId},#{item.chargeDeptId},
             #{item.updateUserId},now())
        </foreach>
    </insert>

    <delete id="deleteProjectLiuChengTuNodeTargetDeptRelationListByProjectBaseId" parameterType="long">
        delete from project_liu_cheng_tu_node_target_dept_relation where project_base_id=#{projectBaseId}
    </delete>

    <select id="selectProjectLiuChengTuNodeTargetDeptRelationList" parameterType="com.ruoyi.project.projectmanage.domain.queryandresponse.QueryProjectLiuChengTuNodeTargetDeptRelationParam" resultMap="tempMap">
        select c.* ,d.dept_name,e.project_name
        from
        (select a.* ,b.charge_dept_id from project_liu_cheng_tu_node a left join project_liu_cheng_tu_node_target_dept_relation b on a.id =b.node_id) c
        left join sys_dept d on c.charge_dept_id=d.dept_id
        left join project_base e on e.id =c.project_base_id
        <where>
            1=1
            <if test="status != null ">
                and c.status =#{status}
            </if>

            <if test="taskName != null and taskName != '' ">
                and c.task_name like CONCAT('%',#{taskName},'%')
            </if>

            <if test="fileName != null and fileName != '' ">
                and c.origin_file_name_list_str like CONCAT('%',#{fileName},'%')
            </if>

            <if test="chargeDeptId != null ">
                and c.charge_dept_id =#{chargeDeptId}
            </if>

            <if test="projectBaseIdList != null and  projectBaseIdList.size()>0">
                and  c.project_base_id in
                <foreach collection="projectBaseIdList" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>

            <if test="statusList != null and  statusList.size()>0">
                and  c.status in
                <foreach collection="statusList" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        order by  c.id asc
        limit #{ pageSize}  offset  #{startIndex}
    </select>

    <select id="selectProjectLiuChengTuNodeTargetDeptRelationCount" parameterType="com.ruoyi.project.projectmanage.domain.queryandresponse.QueryProjectLiuChengTuNodeTargetDeptRelationParam" resultType="int">
        select count(1)
        from
        (select a.* ,b.charge_dept_id from project_liu_cheng_tu_node a left join project_liu_cheng_tu_node_target_dept_relation b on a.id =b.node_id) c
        left join sys_dept d on c.charge_dept_id=d.dept_id
        left join project_base e on e.id =c.project_base_id
        <where>
            1=1
            <if test="status != null ">
                and c.status =#{status}
            </if>

            <if test="taskName != null and taskName != '' ">
                and c.task_name like CONCAT('%',#{taskName},'%')
            </if>

            <if test="fileName != null and fileName != '' ">
                and c.origin_file_name_list_str like CONCAT('%',#{fileName},'%')
            </if>

            <if test="chargeDeptId != null ">
                and c.charge_dept_id =#{chargeDeptId}
            </if>

            <if test="projectBaseIdList != null and  projectBaseIdList.size()>0">
                and  c.project_base_id in
                <foreach collection="projectBaseIdList" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>

            <if test="statusList != null and  statusList.size()>0">
                and  c.status in
                <foreach collection="statusList" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>



</mapper>